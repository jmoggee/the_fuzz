v2.
{<<"/Users/jl/Code/Elixir/the_fuzz/_build/dev/lib/dogma/ebin/Elixir.Dogma.Error.beam">>,
 'Elixir.Dogma.Error',module,<<"lib/dogma/error.ex">>,
 ['Elixir.Kernel','Elixir.Kernel.Utils','Elixir.Protocol','Elixir.Module'],
 [],[],nil}.
{<<"/Users/jl/Code/Elixir/the_fuzz/_build/dev/lib/dogma/ebin/Elixir.Dogma.beam">>,
 'Elixir.Dogma',module,<<"lib/dogma.ex">>,
 ['Elixir.Kernel','Elixir.Module'],
 ['Elixir.Dogma.ScriptSources','Elixir.Dogma.Formatter','Elixir.Dogma.Rules'],
 [],nil}.
{<<"/Users/jl/Code/Elixir/the_fuzz/_build/dev/lib/dogma/ebin/Elixir.Dogma.Rules.Sets.All.beam">>,
 'Elixir.Dogma.Rules.Sets.All',module,<<"lib/dogma/rules/sets/all.ex">>,
 ['Elixir.Kernel','Elixir.Module'],
 ['Elixir.WindowsLineEndings','Elixir.QuotesInString','Elixir.ModuleName',
  'Elixir.UnlessElse','Elixir.LineLength','Elixir.NegatedIfUnless',
  'Elixir.VariableName','Elixir.LiteralInCondition','Elixir.FunctionName',
  'Elixir.ModuleAttributeName','Elixir.FunctionArity',
  'Elixir.DebuggerStatement','Elixir.TrailingBlankLines',
  'Elixir.FinalNewline','Elixir.ModuleDoc','Elixir.TrailingWhitespace'],
 [],nil}.
{<<"/Users/jl/Code/Elixir/the_fuzz/_build/dev/lib/dogma/ebin/Elixir.Dogma.Util.CyclomaticComplexity.beam">>,
 'Elixir.Dogma.Util.CyclomaticComplexity',module,
 <<"lib/dogma/util/cyclomatic_complexity.ex">>,
 ['Elixir.Kernel','Elixir.Module'],
 [erlang,'Elixir.Macro'],
 [],nil}.
{<<"/Users/jl/Code/Elixir/the_fuzz/_build/dev/lib/dogma/ebin/Elixir.Dogma.Rules.beam">>,
 'Elixir.Dogma.Rules',module,<<"lib/dogma/rules.ex">>,
 ['Elixir.Kernel','Elixir.Module','Elixir.Dogma.Script'],
 ['Elixir.Dogma.Formatter','Elixir.Enum'],
 [],nil}.
{<<"/Users/jl/Code/Elixir/the_fuzz/_build/dev/lib/dogma/ebin/Elixir.Dogma.ScriptSources.beam">>,
 'Elixir.Dogma.ScriptSources',module,<<"lib/dogma/script_sources.ex">>,
 ['Elixir.Kernel','Elixir.Module'],
 ['Elixir.File','Elixir.Path','Elixir.String','Elixir.Enum',
  'Elixir.Dogma.Script','Elixir.String.Chars'],
 [],nil}.
{<<"/Users/jl/Code/Elixir/the_fuzz/_build/dev/lib/dogma/ebin/Elixir.Dogma.Util.Name.beam">>,
 'Elixir.Dogma.Util.Name',module,<<"lib/dogma/util/name.ex">>,
 ['Elixir.Kernel','Elixir.Module'],
 [erlang,'Elixir.String'],
 [],nil}.
{<<"/Users/jl/Code/Elixir/the_fuzz/_build/dev/lib/dogma/ebin/Elixir.Mix.Tasks.Dogma.beam">>,
 'Elixir.Mix.Tasks.Dogma',module,<<"lib/mix/tasks/dogma.ex">>,
 ['Elixir.Mix.Task','Elixir.Kernel','Elixir.Enum','Elixir.Module'],
 [erlang,'Elixir.OptionParser','Elixir.System','Elixir.Dogma'],
 [],nil}.
{<<"/Users/jl/Code/Elixir/the_fuzz/_build/dev/lib/dogma/ebin/Elixir.Dogma.Script.beam">>,
 'Elixir.Dogma.Script',module,<<"lib/dogma/script.ex">>,
 ['Elixir.Kernel','Elixir.Kernel.Utils','Elixir.Dogma.Error',
  'Elixir.Protocol','Elixir.Module'],
 [erlang,'Elixir.Dogma.Rules.Sets.All','Elixir.List','Elixir.SyntaxError',
  'Elixir.String','Elixir.Dogma.Util.ScriptStrings','Elixir.Dogma.Rules',
  'Elixir.Enum','Elixir.Regex','Elixir.Code','Elixir.Macro'],
 [],nil}.
{<<"/Users/jl/Code/Elixir/the_fuzz/_build/dev/lib/dogma/ebin/Elixir.Dogma.Rule.beam">>,
 'Elixir.Dogma.Rule',module,<<"lib/dogma/rule.ex">>,
 ['Elixir.Kernel','Elixir.Module','Elixir.Dogma.Script','Elixir.Behaviour',
  'Elixir.Kernel.Typespec'],
 ['Elixir.Code'],
 [],nil}.
{<<"/Users/jl/Code/Elixir/the_fuzz/_build/dev/lib/dogma/ebin/Elixir.Dogma.Formatter.beam">>,
 'Elixir.Dogma.Formatter',module,<<"lib/dogma/formatter.ex">>,
 ['Elixir.Dogma.Formatter.Simple','Elixir.Kernel','Elixir.String',
  'Elixir.Module','Elixir.Dogma.Script','Elixir.Behaviour',
  'Elixir.Kernel.Typespec'],
 ['Elixir.IO','Elixir.Code'],
 [],nil}.
{<<"/Users/jl/Code/Elixir/the_fuzz/_build/dev/lib/dogma/ebin/Elixir.Dogma.Util.ScriptStrings.beam">>,
 'Elixir.Dogma.Util.ScriptStrings',module,
 <<"lib/dogma/util/script_strings.ex">>,
 ['Elixir.Kernel','Elixir.Module'],
 [],[],nil}.
{<<"/Users/jl/Code/Elixir/the_fuzz/_build/dev/lib/dogma/ebin/Elixir.Dogma.Rules.UnlessElse.beam">>,
 'Elixir.Dogma.Rules.UnlessElse',module,<<"lib/dogma/rules/unless_else.ex">>,
 ['Elixir.Kernel','Elixir.Dogma.Rule','Elixir.Dogma.Error','Elixir.Module'],
 ['Elixir.Dogma.Script'],
 [],nil}.
{<<"/Users/jl/Code/Elixir/the_fuzz/_build/dev/lib/dogma/ebin/Elixir.Dogma.Rules.WindowsLineEndings.beam">>,
 'Elixir.Dogma.Rules.WindowsLineEndings',module,
 <<"lib/dogma/rules/windows_line_endings.ex">>,
 ['Elixir.Kernel','Elixir.Dogma.Rule','Elixir.Dogma.Error','Elixir.Module'],
 ['Elixir.Enum','Elixir.Regex'],
 [],nil}.
{<<"/Users/jl/Code/Elixir/the_fuzz/_build/dev/lib/dogma/ebin/Elixir.Dogma.Formatter.Null.beam">>,
 'Elixir.Dogma.Formatter.Null',module,<<"lib/dogma/formatter/null.ex">>,
 ['Elixir.Kernel','Elixir.Dogma.Formatter','Elixir.Module'],
 [],[],nil}.
{<<"/Users/jl/Code/Elixir/the_fuzz/_build/dev/lib/dogma/ebin/Elixir.Dogma.Rules.VariableName.beam">>,
 'Elixir.Dogma.Rules.VariableName',module,
 <<"lib/dogma/rules/variable_name.ex">>,
 ['Elixir.Kernel','Elixir.Dogma.Rule','Elixir.Dogma.Error','Elixir.Module'],
 [erlang,'Elixir.Dogma.Script','Elixir.String.Chars','Elixir.Access',
  'Elixir.Dogma.Util.Name'],
 [],nil}.
{<<"/Users/jl/Code/Elixir/the_fuzz/_build/dev/lib/dogma/ebin/Elixir.Dogma.Rules.ModuleDoc.beam">>,
 'Elixir.Dogma.Rules.ModuleDoc',module,<<"lib/dogma/rules/module_doc.ex">>,
 ['Elixir.Kernel','Elixir.Dogma.Rule','Elixir.Dogma.Error','Elixir.Module'],
 [erlang,'Elixir.Dogma.Script','Elixir.Access','Elixir.Regex','Elixir.Macro'],
 [],nil}.
{<<"/Users/jl/Code/Elixir/the_fuzz/_build/dev/lib/dogma/ebin/Elixir.Dogma.Rules.LiteralInCondition.beam">>,
 'Elixir.Dogma.Rules.LiteralInCondition',module,
 <<"lib/dogma/rules/literal_in_condition.ex">>,
 ['Elixir.Kernel','Elixir.Dogma.Rule','Elixir.Dogma.Error','Elixir.Module'],
 [erlang,'Elixir.Dogma.Script','Elixir.Access'],
 [],nil}.
{<<"/Users/jl/Code/Elixir/the_fuzz/_build/dev/lib/dogma/ebin/Elixir.Dogma.Rules.NegatedIfUnless.beam">>,
 'Elixir.Dogma.Rules.NegatedIfUnless',module,
 <<"lib/dogma/rules/negated_if_unless.ex">>,
 ['Elixir.Kernel','Elixir.Dogma.Rule','Elixir.Dogma.Error','Elixir.Module'],
 ['Elixir.Dogma.Script'],
 [],nil}.
{<<"/Users/jl/Code/Elixir/the_fuzz/_build/dev/lib/dogma/ebin/Elixir.Dogma.Rules.TrailingBlankLines.beam">>,
 'Elixir.Dogma.Rules.TrailingBlankLines',module,
 <<"lib/dogma/rules/trailing_blank_lines.ex">>,
 ['Elixir.Kernel','Elixir.Dogma.Rule','Elixir.Dogma.Error','Elixir.Module'],
 [erlang,'Elixir.Regex'],
 [],nil}.
{<<"/Users/jl/Code/Elixir/the_fuzz/_build/dev/lib/dogma/ebin/Elixir.Dogma.Rules.QuotesInString.beam">>,
 'Elixir.Dogma.Rules.QuotesInString',module,
 <<"lib/dogma/rules/quotes_in_string.ex">>,
 ['Elixir.Kernel','Elixir.Dogma.Rule','Elixir.Dogma.Error','Elixir.String',
  'Elixir.Enum','Elixir.Module'],
 [erlang,'Elixir.Dogma.Script'],
 [],nil}.
{<<"/Users/jl/Code/Elixir/the_fuzz/_build/dev/lib/dogma/ebin/Elixir.Dogma.Rules.TrailingWhitespace.beam">>,
 'Elixir.Dogma.Rules.TrailingWhitespace',module,
 <<"lib/dogma/rules/trailing_whitespace.ex">>,
 ['Elixir.Kernel','Elixir.Dogma.Rule','Elixir.Dogma.Error','Elixir.Module'],
 ['Elixir.String','Elixir.Enum','Elixir.Regex'],
 [],nil}.
{<<"/Users/jl/Code/Elixir/the_fuzz/_build/dev/lib/dogma/ebin/Elixir.Dogma.Rules.ModuleAttributeName.beam">>,
 'Elixir.Dogma.Rules.ModuleAttributeName',module,
 <<"lib/dogma/rules/module_attribute_name.ex">>,
 ['Elixir.Kernel','Elixir.Dogma.Rule','Elixir.Dogma.Error','Elixir.Module'],
 [erlang,'Elixir.Dogma.Script','Elixir.String.Chars','Elixir.Access',
  'Elixir.Dogma.Util.Name'],
 [],nil}.
{<<"/Users/jl/Code/Elixir/the_fuzz/_build/dev/lib/dogma/ebin/Elixir.Dogma.Rules.ModuleName.beam">>,
 'Elixir.Dogma.Rules.ModuleName',module,<<"lib/dogma/rules/module_name.ex">>,
 ['Elixir.Kernel','Elixir.Dogma.Rule','Elixir.Dogma.Error','Elixir.Module'],
 [erlang,'Elixir.String','Elixir.Enum','Elixir.Atom','Elixir.Dogma.Script',
  'Elixir.Access','Elixir.Dogma.Util.Name'],
 [],nil}.
{<<"/Users/jl/Code/Elixir/the_fuzz/_build/dev/lib/dogma/ebin/Elixir.Dogma.Rules.LineLength.beam">>,
 'Elixir.Dogma.Rules.LineLength',module,<<"lib/dogma/rules/line_length.ex">>,
 ['Elixir.Kernel','Elixir.Dogma.Rule','Elixir.Dogma.Error','Elixir.Module'],
 [erlang,'Elixir.String','Elixir.Enum'],
 [],nil}.
{<<"/Users/jl/Code/Elixir/the_fuzz/_build/dev/lib/dogma/ebin/Elixir.Dogma.Rules.FunctionArity.beam">>,
 'Elixir.Dogma.Rules.FunctionArity',module,
 <<"lib/dogma/rules/function_arity.ex">>,
 ['Elixir.Kernel','Elixir.Dogma.Rule','Elixir.Dogma.Error','Elixir.Module'],
 [erlang,'Elixir.Enum','Elixir.Dogma.Script','Elixir.String.Chars'],
 [],nil}.
{<<"/Users/jl/Code/Elixir/the_fuzz/_build/dev/lib/dogma/ebin/Elixir.Dogma.Rules.FinalNewline.beam">>,
 'Elixir.Dogma.Rules.FinalNewline',module,
 <<"lib/dogma/rules/final_newline.ex">>,
 ['Elixir.Kernel','Elixir.Dogma.Rule','Elixir.Dogma.Error','Elixir.Module'],
 [erlang,'Elixir.String'],
 [],nil}.
{<<"/Users/jl/Code/Elixir/the_fuzz/_build/dev/lib/dogma/ebin/Elixir.Dogma.Rules.FunctionName.beam">>,
 'Elixir.Dogma.Rules.FunctionName',module,
 <<"lib/dogma/rules/function_name.ex">>,
 ['Elixir.Kernel','Elixir.Dogma.Rule','Elixir.Dogma.Error','Elixir.Module'],
 [erlang,'Elixir.Dogma.Script','Elixir.String.Chars','Elixir.Access',
  'Elixir.Dogma.Util.Name'],
 [],nil}.
{<<"/Users/jl/Code/Elixir/the_fuzz/_build/dev/lib/dogma/ebin/Elixir.Dogma.Rules.DebuggerStatement.beam">>,
 'Elixir.Dogma.Rules.DebuggerStatement',module,
 <<"lib/dogma/rules/debugger_statement.ex">>,
 ['Elixir.Kernel','Elixir.Dogma.Rule','Elixir.Dogma.Error','Elixir.Module'],
 ['Elixir.Dogma.Script','Elixir.Access'],
 [],nil}.
{<<"/Users/jl/Code/Elixir/the_fuzz/_build/dev/lib/dogma/ebin/Elixir.Dogma.Formatter.Simple.beam">>,
 'Elixir.Dogma.Formatter.Simple',module,<<"lib/dogma/formatter/simple.ex">>,
 ['Elixir.Kernel','Elixir.Dogma.Formatter','Elixir.Module'],
 [erlang,'Elixir.List','Elixir.IO.ANSI','Elixir.String','Elixir.Enum',
  'Elixir.String.Chars'],
 [],nil}.
